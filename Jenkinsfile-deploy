pipeline {
  agent {
    label 'maven'
  }
  stages {
    stage('Build') {
      steps {
        git url: 'https://github.com/siamaksade/mapit-spring.git'
        sh "mvn package -DskipTests"
      }
    }
    stage('Test') {
      steps {
        sh "mvn test"
      }
    }
    stage('Build Image') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject('dev') {
              def build = openshift.startBuild("mapit-spring", "--from-file=target/mapit-spring.jar")

              timeout(10) {
                build.untilEach(1) {
                  return it.object().status.phase in ["Complete", "Failed", "Cancelled"]
                }
              }
            }
          }
        }
      }
    }
    stage('Deploy') {
      steps {
        script {
          openshift.withCluster() {
            openshift.withProject('dev') {
              openshift.selector("dc/mapit-spring").rollout().latest()
            }
          }
        }
      }
    }
  }
}